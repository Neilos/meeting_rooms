<script data-template-name="application" type="text/x-handlebars">
<div class="container">
  {{partial 'about'}}
  {{outlet}}
</div>
</script>

<script data-template-name="index" type="text/x-handlebars">
<h2>Widgets (Page {{page}}: {{content.length}} total widgets)</h2>

<!-- // add class 'vertical' on outer-container for vertical scrolling (and remove 'horizontal' class)
  //...or...
  // add class 'horizontal' on outer-container for horizontal scrolling (and remove 'vertical' class) -->
<div class="inf-scroll-outer-container horizontal">
  <ul class="inf-scroll-inner-container">
  {{#each widget in controller}}
    <li>Widget: {{widget.name}}</li>
  {{/each}}
  </ul>
</div>

{{#if loadingMore}}
  Loading more...
{{else}}
  <a href='#' {{action 'getMore'}}>Get More...</a>
{{/if}}
</script>

<style type="text/css">
  /*  RECOMMENDED STYLING FOR INFINITE SCROLLING
    Styling included for both HORIZONTAL and VERTICAL scrolling.
    Select type of scrolling by adding either the class 'horizontal' or 'vertical' on the inf-scroll-outer-container. */
  .inf-scroll-outer-container.horizontal {
    overflow-x: scroll; /* <-- required for horizontal scrolling */
    white-space: nowrap; /* <-- required for horizontal scrolling; optional for vertical scrolling*/
    width: 100%; /* a set width is required for horizontal scrolling */
  }
  .inf-scroll-outer-container.horizontal > .inf-scroll-inner-container {
    display: inline; /* <--'display: inline' for horizontal scrolling or remove/comment out for vertical scrolling */
  }
  .inf-scroll-outer-container.horizontal > .inf-scroll-inner-container > * {
    display: inline-block; /* <--'display: block' for vertical scrolling or either 'display: inline' or 'display: inline-block' for horizontal scrolling.*/
  }
  .inf-scroll-outer-container.vertical {
    overflow-y: scroll; /* <-- required for vertical scrolling */
    height: 300px; /* a set height is required for horizontal scrolling */
  }
  .inf-scroll-outer-container.vetical > .inf-scroll-inner-container > * {
    display: block;
  }
  .inf-scroll-inner-container {
    overflow: visible; /* <-- required to ensure inner container fully contains the scroll items */
  }

  /* OPTIONAL STYLING FOR DEMO PURPOSES ONLY */
  ul.inf-scroll-inner-container {
    padding: 0;
  }

  ul.inf-scroll-inner-container > li {
    list-style: none;
    margin: 5px;
    padding: 5px;
    background-color: #CCC;
    line-height: 10px;
    text-align: center;
  }
  .inf-scroll-outer-container {
    width: 300px;
    height: 200px;
    background-color: yellow;
  }
</style>

<script data-template-name="_about" type="text/x-handlebars">
  <p>This is a jsbin to demonstrate an infinite scrolling pattern with
  ember.js. For more details, see <a  target='_blank'  href='http://coryforsyth.com/2013/07/28/infinite-scrolling-with-ember-js/'>this blog post</a> or the
  <a target='_blank' href='https://github.com/bantic/ember-infinite-scroll'>`InfiniteScroll` ember add-on</a>.
  Created by <a  target='_blank'  href='http://twitter.com/bantic'>Cory Forsyth</a>.
  </p>
</script>

